services:
  MSSQLDB:
    container_name: MSSQLDB
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      MSSQL_SA_PASSWORD: ${MS_DB_PASSWORD}
      ACCEPT_EULA: 'Y'
    ports:
      - '1433:1433'
    volumes:
      - MSSQLDB:/var/opt/mssql
      - ./oda.bak:/var/opt/mssql/backup/oda.bak
    env_file:
      - .env
    networks:
      - migration_network

  pgsqldb:
    container_name: pgsqldb
    build:
      context: .
      dockerfile: Dockerfile.pgsql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - pgsqldb:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env
    networks:
      - migration_network

  oda_pg:
    image: dimitri/pgloader:latest
    command: pgloader /data/loadfile.load
    mem_limit: 4g
    volumes:
      - ./loadfile.load:/data/loadfile.load
      - pgsqldb:/var/lib/postgresql/data
    depends_on:
      - MSSQLDB
      - pgsqldb
    env_file:
      - .env
    networks:
      - migration_network
  fastapi:
    container_name: fastapi
    build:
      context: ./llm_service
      dockerfile: Dockerfile.fastapi
    ports:
      - '8000:8000'
    env_file:
      - .env
      
  nuxt_app:
    container_name: nuxt_app
    build:
      context: .
      dockerfile: Dockerfile.nuxt
    ports:
      - '3000:3000'
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - pgsqldb
    networks:
      - migration_network

volumes:
  MSSQLDB:
  pgsqldb:

networks:
  migration_network:
    driver: bridge
